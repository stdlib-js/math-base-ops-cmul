{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Complex128 = require( '@stdlib/complex-float64' );\nvar real = require( '@stdlib/complex-real' );\nvar imag = require( '@stdlib/complex-imag' );\n\n\n// MAIN //\n\n/**\n* Multiplies two double-precision complex floating-point numbers.\n*\n* @param {Complex128} z1 - complex number\n* @param {Complex128} z2 - complex number\n* @returns {Complex128} result\n*\n* @example\n* var Complex128 = require( '@stdlib/complex-float64' );\n* var real = require( '@stdlib/complex-real' );\n* var imag = require( '@stdlib/complex-imag' );\n*\n* var z1 = new Complex128( 5.0, 3.0 );\n* // returns <Complex128>\n*\n* var z2 = new Complex128( -2.0, 1.0 );\n* // returns <Complex128>\n*\n* var out = cmul( z1, z2 );\n* // returns <Complex128>\n*\n* var re = real( out );\n* // returns -13.0\n*\n* var im = imag( out );\n* // returns -1.0\n*/\nfunction cmul( z1, z2 ) {\n\tvar re1 = real( z1 );\n\tvar re2 = real( z2 );\n\tvar im1 = imag( z1 );\n\tvar im2 = imag( z2 );\n\tvar re = (re1*re2) - (im1*im2);\n\tvar im = (re1*im2) + (im1*re2);\n\treturn new Complex128( re, im );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cmul;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Multiply two double-precision complex floating-point numbers.\n*\n* @module @stdlib/math-base-ops-cmul\n*\n* @example\n* var Complex128 = require( '@stdlib/complex-float64' );\n* var real = require( '@stdlib/complex-real' );\n* var imag = require( '@stdlib/complex-imag' );\n* var cmul = require( '@stdlib/math-base-ops-cmul' );\n*\n* var z1 = new Complex128( 5.0, 3.0 );\n* // returns <Complex128>\n*\n* var z2 = new Complex128( -2.0, 1.0 );\n* // returns <Complex128>\n*\n* var out = cmul( z1, z2 );\n* // returns <Complex128>\n*\n* var re = real( out );\n* // returns -13.0\n*\n* var im = imag( out );\n* // returns -1.0\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAa,QAAS,yBAA0B,EAChDC,EAAO,QAAS,sBAAuB,EACvCC,EAAO,QAAS,sBAAuB,EAgC3C,SAASC,EAAMC,EAAIC,EAAK,CACvB,IAAIC,EAAML,EAAMG,CAAG,EACfG,EAAMN,EAAMI,CAAG,EACfG,EAAMN,EAAME,CAAG,EACfK,EAAMP,EAAMG,CAAG,EACfK,EAAMJ,EAAIC,EAAQC,EAAIC,EACtBE,EAAML,EAAIG,EAAQD,EAAID,EAC1B,OAAO,IAAIP,EAAYU,EAAIC,CAAG,CAC/B,CAKAZ,EAAO,QAAUI,ICpBjB,IAAIS,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "Complex128", "real", "imag", "cmul", "z1", "z2", "re1", "re2", "im1", "im2", "re", "im", "main"]
}
